plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.13'
    id 'org.beryx.jlink' version '2.25.0'
}

repositories {
    mavenCentral()
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    implementation 'org.openjfx:javafx-controls:17.0.6'
    implementation 'org.openjfx:javafx-fxml:17.0.6'
    implementation files('libs/jnetpcap-1.4.r1425/jnetpcap.jar')
}

application {
    mainModule = 'com.yourpackage' // Make sure this matches your module name
    mainClass = 'com.yourpackage.Main' // Use the full path to your main class
}

javafx {
    version = "17.0.6"
    modules = ['javafx.controls', 'javafx.fxml']
}

jlink {
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'Dorothy'
    }
    jpackage {
        if (org.gradle.internal.os.OperatingSystem.current().windows) {
            installerOptions += ['--win-per-user-install', '--win-dir-chooser', '--win-menu', '--win-shortcut']
        }
    }
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    options.compilerArgs += ["-Xlint:unchecked", "-Xlint:deprecation", "--add-modules", "javafx.controls,javafx.fxml,jnetpcap"]
}

run {
    systemProperty "java.library.path", file("${projectDir}/native").absolutePath
    jvmArgs = ['-Djava.library.path=' + file("${projectDir}/native").absolutePath]
    workingDir = projectDir
}

task copyNativeLibs(type: Copy) {
    from 'src/main/cpp'
    into 'native'
    include '*.dll'
}

processResources.dependsOn copyNativeLibs

tasks.withType(JavaExec) {
    systemProperty "java.library.path", file("${projectDir}/native").absolutePath
    jvmArgs = ['-Djava.library.path=' + file("${projectDir}/native").absolutePath]
    workingDir = projectDir
}

task buildNative(type: Exec) {
    doFirst {
        mkdir 'src/main/resources/native'
    }
    workingDir '.'
    commandLine 'wsl', 'x86_64-w64-mingw32-g++', '-shared', '-o', 'src/main/resources/native/tcpsynflood.dll', 'src/main/cpp/tcpsynflood.cpp', '-lws2_32', '-Wl,--add-stdcall-alias', '-I/mnt/c/Program Files/Java/jdk-17/include', '-I/mnt/c/Program Files/Java/jdk-17/include/win32', '-I/mnt/c/Program Files/Npcap/Include', '-L/mnt/c/Program Files/Npcap/Lib/x64', '-lwpcap'
}

build.dependsOn buildNative