plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.13'
}

repositories {
    mavenCentral()
}

javafx {
    version = "21.0.4"
    modules = ['javafx.controls', 'javafx.fxml', 'javafx.graphics']
}

dependencies {
    implementation files('libs/jnetpcap-1.4.r1425/jnetpcap.jar')
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

application {
    mainClass = 'com.yourpackage.Main'
    mainModule = 'com.yourpackage' // Add this line
}

task copyNpcapHeaders(type: Copy) {
    from '/mnt/c/Program Files/Npcap/Include'
    into "${buildDir}/npcap-include"
    fileMode = 0644
    dirMode = 0755
}

task copyPcapHeader(type: Copy) {
    from '/mnt/c/Program Files/Npcap/Include/pcap.h'
    into "${buildDir}/mingw-include"
}

task copyWpcapLib(type: Copy) {
    from '/mnt/c/Program Files/Npcap/Lib/x64'
    include 'wpcap.lib', 'Packet.lib'
    into "${buildDir}/libs"
}

task buildNative(type: Exec) {
    def javaHome = new File('C:/Program Files/Java/jdk-17') // Update this path to your JDK location
    def jniIncludePath = javaHome.absolutePath + '/include'
    def jniIncludeWinPath = jniIncludePath + '/win32'
    def npcapIncludePath = "${buildDir}/npcap-include"
    def npcapLibPath = "${buildDir}/libs"

    commandLine 'g++', 
                '-o', "${buildDir}/libs/tcpsynflood.dll",
                '-shared', 
                '-I' + jniIncludePath, 
                '-I' + jniIncludeWinPath,
                '-I' + npcapIncludePath,
                '-L' + npcapLibPath,
                'src/main/cpp/tcpsynflood.cpp', 
                '-lwpcap', 
                '-lpacket',
                '-lws2_32', 
                '-liphlpapi', 
                '-static-libgcc', 
                '-static-libstdc++',
                '-D_WIN32_WINNT=0x0601',
                '-DWINVER=0x0601'
}

buildNative.dependsOn copyNpcapHeaders

buildNative.dependsOn copyPcapHeader

buildNative.dependsOn copyWpcapLib

run.dependsOn buildNative

run {
    systemProperty "java.library.path", "${buildDir}/libs"
}

distZip.dependsOn copyWpcapLib
distTar.dependsOn copyWpcapLib
startScripts.dependsOn copyWpcapLib